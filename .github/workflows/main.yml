
name: Apigee OAS-First pipeline

on: push


# Needed to write files to the repository (JOB2)
permissions:
  contents: write


env:
  APIGEE_DEPLOYMENT_SUFFIX: "-demo"

  # Default Target Apigee Organization et environment 
  # and Target Server URL are in .env file

  # GCP Service Account Key used to deploy proxy
  GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}

  # GCP Service Account email to be used to access GCP services from proxy
  # (specified at deployment step)
  APIGEE_GOOGLE_TOKEN_EMAIL: ${{ secrets.APIGEE_GOOGLE_TOKEN_EMAIL }}
  COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

jobs:

# JOB 0 ------------------------------------------------------------------------

  initial-publish-to-apihub:
    if: "contains(github.event.head_commit.message, '[api-hub]')"
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v5

      - name: Checkout script repository
        uses: actions/checkout@v5
        with:
          repository: g-lalevee/APIhub-apiData-builder
          path: my-script
          token: ${{ secrets.CHECKOUT_PAT }}


  # Install apigee-go-gen
      - name: Install apigee-go-gen
        shell: bash
        run: |
          # bash install-apigee-go-gen 
          # change it to apigee-go-gen when issue fixed !!!!
          curl -s https://apigee.github.io/apigee-go-gen/install | bash


      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT }}'

      - name: Get the access token
        run: |
          echo "GCP_TOKEN=${{ steps.auth.outputs.access_token }}" >> $GITHUB_ENV


  # Generate apiData payload then upsert to API hub plugin 
      - name: Build API hub plugin payload
        run: |
          chmod +x ./my-script/build-apiData.sh

          set -a
          source .env
          set +a

          . ./my-script/build-apiData.sh

          #cat apiData.json

          echo "curl --location https://apihub.googleapis.com/v1/projects/$apigee_org/locations/$apihub_region:collectApiData  --header Content-Type: application/json  --header Authorization: Bearer $GCP_TOKEN  --data-binary @apiData.json "
      
          curl -v --location 'https://apihub.googleapis.com/v1/projects/$apigee_org/locations/$apihub_region:collectApiData' --header 'Content-Type: application/json'  --header "Authorization: Bearer $GCP_TOKEN"  --data-binary "@apiData.json"


